# coding=UTF-8
"""

LJ Font 1
v0.7.0


LICENCE : CC
by Sam Neurohack 
from /team/laser


"""
from libs3 import gstt

def DigitsDots(number,color):
	dots =[]
	#print ASCII_GRAPHICS[ord(char) - 48]
	for dot in ASCII_GRAPHICS[number]:
		#print dot
		dots.append((gstt.xy_center[0]+dot[0],gstt.xy_center[1]+dot[1],color))
		#self.point_list.append((xy + (c,)))
	return dots

ASCII_GRAPHICS = [

#implementé

	[(-50,30), (-30,-30), (30,-30), (10,30), (-50,30)],							#0
	[(-20,30), (0,-30), (-20,30)], 												#1
	[(-30,-10), (0,-30), (30,-10), (30,0), (-30,30), (30,30)],					#2
	[(-30,-30), (0,-30), (30,-10), (0,0), (30,10), (0,30), (-30,30)],				#3
	[(30,10), (-30,10), (0,-30), (0,30)],											#4
	[(30,-30), (-30,-30), (-30,0), (0,0), (30,10), (0,30), (-30,30)],				#5
	[(30,-30), (0,-30), (-30,-10), (-30,30), (0,30), (30,10), (30,0), (-30,0)],	#6
	[(-30,-30), (30,-30), (-30,30)],												#7
	[(-30,30), (-30,-30), (30,-30), (30,30), (-30,30), (-30,0), (30,0)],			#8
	[(30,0), (-30,0), (-30,-10), (0,-30), (30,-30), (30,10), (0,30), (-30,30)],	#9

# A implementer	
	[(-30,10), (30,-10), (30,10), (0,30), (-30,10), (-30,-10), (0,-30), (30,-10)], #:
	[(-30,-10), (0,-30), (0,30)], [(-30,30), (30,30)],							#;
	[(-30,-10), (0,-30), (30,-10), (30,0), (-30,30), (30,30)],					#<
	[(-30,-30), (0,-30), (30,-10), (0,0), (30,10), (0,30), (-30,30)],				#=
	[(30,10), (-30,10), (0,-30), (0,30)],											#>
	[(30,-30), (-30,-30), (-30,0), (0,0), (30,10), (0,30), (-30,30)],				#?
	[(30,-30), (0,-30), (-30,-10), (-30,30), (0,30), (30,10), (30,0), (-30,0)],	#@

# Implementé
	

	[(-30,30), (-30,-30), (30,-30), (30,30), (30,0), (-30,0)],				#A
	[(-30,30), (-30,-30), (30,-30), (30,30), (30,0), (-30,0)],				#A
	[(-30,30), (-30,-30), (30,-30), (30,30), (-30,30), (-30,0), (30,0)],		#B
	[(30,30), (-30,30), (-30,-30), (30,-30)],									#C
	[(-30,30), (-30,-30), (30,-30), (30,30), (-30,30)],						#D
	[(30,30), (-30,30), (-30,-0), (30,0), (-30,0), (-30,-30), (30,-30)],		#E
	[(-30,30), (-30,-0), (30,0), (-30,0), (-30,-30), (30,-30)],				#F
	[(0,0), (30,0), (30,30), (-30,30), (-30,-30),(30,-30)],					#G
	[(-30,-30), (-30,30), (-30,0), (30,0), (30,30), (30,-30)],				#H
	[(0,30), (0,-30)],														#I
	[(-30,30), (0,-30), (0,-30), (-30,-30), (30,-30)],						#J
	[(-30,-30), (-30,30), (-30,0), (30,-30), (-30,0), (30,30)],				#K
	[(30,30), (-30,30), (-30,-30)],											#L
	[(-30,30), (-30,-30), (0,0), (30,-30), (30,30)],							#M
	[(-30,30), (-30,-30), (30,30), (30,-30)],									#N
	[(-30,30), (-30,-30), (30,-30), (30,30), (-30,30)],						#O
	[(-30,0), (30,0), (30,-30), (-30,-30), (-30,30)],							#P
	[(30,30), (30,-30), (-30,-30), (-30,30), (30,30),(35,35)],				#Q
	[(-30,30), (-30,-30), (30,-30), (30,0), (-30,0), (30,30)],				#R
	[(30,-30), (-30,-30), (-30,0), (30,0), (30,30), (-30,30)],				#S
	[(0,30), (0,-30), (-30,-30), (30,-30)],									#T
	[(-30,-30), (-30,30), (30,30), (30,-30)],									#U
	[(-30,-30), (0,30), (30,-30)],											#V
	[(-30,-30), (-30,30), (0,0), (30,30), (30,-30)],							#W
	[(-30,30), (30,-30)], [(-30,-30), (30,30)],								#X
	[(0,30), (0,0), (30,-30), (0,0), (-30,-30)],								#Y
	[(30,30), (-30,30), (30,-30), (-30,-30)],									#Z
	
				# A implementer	

	[(-30,-10), (0,-30), (0,30)], [(-30,30), (30,30)],							#[
	[(-30,-10), (0,-30), (30,-10), (30,0), (-30,30), (30,30)],					#\
	[(-30,-30), (0,-30), (30,-10), (0,0), (30,10), (0,30), (-30,30)],				#]
	[(30,10), (-30,10), (0,-30), (0,30)],											#^
	[(30,-30), (-30,-30), (-30,0), (0,0), (30,10), (0,30), (-30,30)],				#_
	[(30,-30), (0,-30), (-30,-10), (-30,30), (0,30), (30,10), (30,0), (-30,0)],	#`
	
			# Implementé
	
	[(-20,20), (-20,-20), (20,-20), (20,20), (20,0), (-20,0)],				#a
	[(-20,20), (-20,-20), (20,-20), (20,20), (-20,20), (-20,0), (20,0)],		#b
	[(20,20), (-20,20), (-20,-20), (20,-20)],									#c
	[(-20,20), (-20,-20), (20,-20), (20,20), (-20,20)],						#d
	[(20,20), (-20,20), (-20,-0), (20,0), (-20,0), (-20,-20), (20,-20)],		#e
	[(-20,20), (-20,-0), (20,0), (-20,0), (-20,-20), (20,-20)],				#f
	[(0,0), (20,0), (20,20), (-20,20), (-20,-20),(20,-20)],					#g
	[(-20,-20), (-20,20), (-20,0), (20,0), (20,20), (20,-20)],				#H
	[(0,20), (0,-20)],														#I
	[(-20,20), (0,-20), (0,-20), (-20,-20), (20,-20)],						#J
	[(-20,-20), (-20,20), (-20,0), (20,-20), (-20,0), (20,20)],				#K
	[(20,20), (-20,20), (-20,-20)],											#L
	[(-20,20), (-20,-20), (0,0), (20,-20), (20,20)],							#M
	[(-20,20), (-20,-20), (20,20), (20,-20)],									#N
	[(-20,20), (-20,-20), (20,-20), (20,20), (-20,20)],						#O
	[(-20,0), (20,0), (20,-20), (-20,-20), (-20,20)],							#P
	[(20,20), (20,-20), (-20,-20), (-20,20), (20,20),(25,25)],				#Q
	[(-20,20), (-20,-20), (20,-20), (20,0), (-20,0), (20,20)],				#R
	[(20,-20), (-20,-20), (-20,0), (20,0), (20,20), (-20,20)],				#S
	[(0,20), (0,-20), (-20,-20), (20,-20)],									#T
	[(-20,-20), (-20,20), (20,20), (20,-20)],									#U
	[(-20,-20), (0,20), (20,-20)],											#V
	[(-20,-20), (-20,20), (0,0), (20,20), (20,-20)],							#W
	[(-20,20), (20,-20)], [(-20,-20), (20,20)],								#X
	[(0,20), (0,0), (20,-20), (0,0), (-20,-20)],								#Y
	[(20,20), (-20,20), (20,-20), (-20,-20)],									#Z

	[(-2,15), (2,15)]															# Point a la place de {
]
